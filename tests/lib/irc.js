// Generated by CoffeeScript 1.6.3
(function() {
  var assert;

  assert = require('assert');

  suite('IRC', function() {
    return test('Integration', function(done, server, client, client2) {
      client["eval"](function() {
        return Accounts.createUser({
          username: 'matty',
          password: 'password'
        }, function(err) {
          return Meteor.call('connect', (function() {
            return Meteor.users.findOne({
              username: 'matty'
            });
          })());
        });
      });
      server["eval"](function() {
        Meteor.users.find().observe({
          added: function(user) {
            return emit('user:added', user);
          },
          changed: function(user) {
            if (user.profile.connecting === true) {
              return emit('user:connecting', user);
            } else {
              emit('user:connected', user);
              return Meteor.call('join', user, '##meteor_test');
            }
          }
        });
        Channels.find().observe({
          added: function(channel) {
            emit('channel:added', channel);
            return Meteor.call('say', Meteor.users.findOne({
              username: 'matty'
            }), channel.name, 'Hello');
          }
        });
        return Messages.find().observe({
          added: function(message) {
            emit('message:added', message);
            return Meteor.call('part', Meteor.users.findOne({
              username: 'matty'
            }), '##meteor_test');
          },
          removed: function(channel) {
            return emit('channel:removed', channel);
          }
        });
      });
      server.once('user:added', function(user) {
        assert.equal(user.username, 'matty');
        return console.log('Created user.');
      });
      server.on('user:connecting', function(user) {
        assert.equal(user.profile.connecting, true);
        if (user.username === 'matty') {
          return console.log('Connecting user1...');
        } else {
          return console.log('Connecting user2...');
        }
      });
      server.on('user:connected', function(user) {
        assert.equal(user.profile.connecting, false);
        if (user.username === 'matty') {
          client2["eval"](function() {
            return Accounts.createUser({
              username: 'matty2',
              password: 'password',
              profile: {
                connecting: false
              }
            }, function(err) {
              console.log('Connecting 2nd user.');
              return Meteor.call('connect', (function() {
                return Meteor.users.findOne({
                  username: 'matty2'
                });
              })());
            });
          });
          return console.log('User1 connected.');
        } else {
          console.log('User2 connected.');
          return Meteor.call('join', Meteor.users.findOne({
            username: 'matty2'
          }, '##meteor_test'));
        }
      });
      server.once('channel:added', function(channel) {
        assert.equal(channel.name, '##meteor_test');
        return console.log('Joined channel.');
      });
      server.once('message:added', function(message) {
        assert.equal(message.text, 'Hello');
        assert.equal(message.channel, '##meteor_test');
        assert.equal(message.from, 'matty');
        return console.log('Message sent.');
      });
      return server.once('channel:removed', function(channel) {
        assert.equal(channel.name, '##meteor_test');
        console.log('Left channel.');
        return done();
      });
    });
  });

}).call(this);
